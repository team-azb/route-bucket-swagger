openapi: 3.0.3
info:
  title: RouteBucketBackend
  description: RouteBucketBackend
  version: 0.1.0
servers:
  - url: 'http://localhost:8080/'
    description: development
tags:
  - name: route
    description: ルートに関するエンドポイントたち
  - name: user
    description: ユーザーに関するエンドポイントたち
paths:
  /routes/:
    get:
      operationId: routesGetAll
      summary: 全Route一覧
      tags:
        - route
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  routes:
                    type: array
                    items:
                      $ref: '#/components/schemas/RouteInfo'
                    example:
                      - id: kB61aMhc4I_
                        name: mock_sample
                        owner_id: user0
                required:
                  - routes
      description: 全`Route`の`RouteInfo`を一覧で返す
    post:
      operationId: routesPost
      summary: Routeの作成
      tags:
        - route
      description: |
        指定した名前のRouteを作成し、そのidを返す
      requestBody:
        description: Routeの情報
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Route作成リクエスト
              required:
                - name
              properties:
                name:
                  type: string
                  maxLength: 50
                  description: Routeの名前
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                description: Route作成レスポンス
                properties:
                  id:
                    $ref: '#/components/schemas/RouteId'
                required:
                  - id
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
      security:
        - userBearerAuth: []
  /routes/search:
    get:
      summary: 公開ルートの検索
      tags:
        - route
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  routes:
                    type: array
                    items:
                      $ref: '#/components/schemas/RouteInfo'
                  result_num:
                    type: integer
                    description: このページを含む検索結果の総数
                required:
                  - routes
                  - result_num
      operationId: get-routes-search
      description: |-
        公開ルートの検索を行う。
        現状は`updated_at`の昇順で返ってくる（いずれ作成日時などのフィールドを追加して、それに応じて並べたい）
      parameters:
        - schema:
            type: string
            minLength: 1
            maxLength: 40
          in: query
          name: owner_id
          description: '`Route`の所有者を指定して検索'
        - schema:
            type: integer
            minimum: 0
            default: 0
          in: query
          name: page_offset
          description: 取得するページ位置（0-indexed）
        - schema:
            type: integer
            minimum: 1
          in: query
          name: page_size
          description: ページあたりの検索結果件数 （指定されなかった場合、全件取得する）
    parameters: []
  '/routes/{id}':
    get:
      operationId: routesGet
      summary: Routeの取得
      tags:
        - route
      description: |
        指定したRouteの情報を取得する。
        このエンドポイントを呼ぶには、`VIEWER`以上の権限が必要。
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
              example:
                id: kB61aMhc4I_
                name: mock_sample
                owner_id: user0
                waypoints:
                  - latitude: 35.68136
                    longitude: 139.75876
                  - latitude: 35.69055
                    longitude: 139.7568
                segments:
                  - points:
                      - latitude: 35.68136
                        longitude: 139.75876
                        elevation: 7
                        distance_from_start: 0
                      - latitude: 35.68244
                        longitude: 139.75945
                        elevation: 0
                        distance_from_start: 135.29845221622904
                      - latitude: 35.68275
                        longitude: 139.75966
                        elevation: -12
                        distance_from_start: 174.64283262126588
                      - latitude: 35.68314
                        longitude: 139.75991
                        elevation: -5
                        distance_from_start: 223.53520415689425
                      - latitude: 35.6832
                        longitude: 139.75986
                        elevation: -5
                        distance_from_start: 235.0378642930681
                      - latitude: 35.68452
                        longitude: 139.76027
                        elevation: 1
                        distance_from_start: 387.91297063867233
                      - latitude: 35.68481
                        longitude: 139.7604
                        elevation: 0
                        distance_from_start: 422.24716811243513
                      - latitude: 35.68496
                        longitude: 139.7605
                        elevation: 5
                        distance_from_start: 441.2240245995616
                      - latitude: 35.68523
                        longitude: 139.76072
                        elevation: 5
                        distance_from_start: 477.23739202415607
                      - latitude: 35.68532
                        longitude: 139.76082
                        elevation: 5
                        distance_from_start: 490.9080235469514
                      - latitude: 35.6856
                        longitude: 139.76095
                        elevation: 6
                        distance_from_start: 524.214475013159
                      - latitude: 35.68569
                        longitude: 139.76099
                        elevation: 6
                        distance_from_start: 534.8608965088586
                      - latitude: 35.68576
                        longitude: 139.76102
                        elevation: 6
                        distance_from_start: 543.1174461489453
                      - latitude: 35.68584
                        longitude: 139.76106
                        elevation: 6
                        distance_from_start: 552.7186395786945
                      - latitude: 35.68713
                        longitude: 139.7614
                        elevation: 12
                        distance_from_start: 699.460287920067
                      - latitude: 35.68731
                        longitude: 139.76143
                        elevation: 12
                        distance_from_start: 719.8356893322001
                      - latitude: 35.68833
                        longitude: 139.76102
                        elevation: -4
                        distance_from_start: 839.146113765254
                      - latitude: 35.6892
                        longitude: 139.76076
                        elevation: 1
                        distance_from_start: 938.7117673516411
                      - latitude: 35.68939
                        longitude: 139.76053
                        elevation: 1
                        distance_from_start: 968.5363238601359
                      - latitude: 35.68996
                        longitude: 139.75983
                        elevation: 20
                        distance_from_start: 1058.0709003556071
                      - latitude: 35.68999
                        longitude: 139.75974
                        elevation: 20
                        distance_from_start: 1066.9634531124427
                      - latitude: 35.69021
                        longitude: 139.75869
                        elevation: 14
                        distance_from_start: 1164.899981198707
                      - latitude: 35.69028
                        longitude: 139.75821
                        elevation: 14
                        distance_from_start: 1208.9694613796746
                      - latitude: 35.69054
                        longitude: 139.75667
                        elevation: 16
                        distance_from_start: 1358.3763482720174
                      - latitude: 35.69055
                        longitude: 139.7568
                        elevation: 16
                        distance_from_start: 1370.582718193045
                elevation_gain: 302
                total_distance: 6188.845447778645
                bounding_box:
                  min_coord:
                    longitude: 139.7568
                    latitude: 35.68136
                  max_coord:
                    longitude: 139.76143
                    latitude: 35.69055
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: routesDelete
      summary: Routeの削除
      tags:
        - route
      responses:
        '200':
          description: ok
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - userBearerAuth: []
      description: |-
        指定した`Route`を削除する
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
    parameters:
      - in: path
        name: id
        description: RouteのID
        required: true
        schema:
          type: string
  '/routes/{id}/gpx/':
    parameters:
      - $ref: '#/components/parameters/route_id'
    get:
      summary: RouteのGPX出力
      tags:
        - route
      responses:
        '200':
          description: |-
            OK

            `Route`を表すGPXファイルを返す
            GPXは少なくともGarmin Connectで動作確認済み
            スキーマは省略
          content:
            application/gpx+xml:
              schema:
                type: object
                properties: {}
      operationId: get-routes-id-gpx
      description: このエンドポイントを呼ぶには、`VIEWER`以上の権限が必要。
      parameters: []
  '/routes/{id}/rename/':
    patch:
      operationId: routesRename
      summary: Routeの名前変更
      description: |
        指定したRouteの名前を変更する。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      tags:
        - route
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Route改名リクエスト
              required:
                - name
              properties:
                name:
                  type: string
                  description: 変更したい名前
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteInfo'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
  '/routes/{id}/add/{pos}':
    patch:
      operationId: routesAdd
      summary: 新たな点の追加
      tags:
        - route
      description: |
        指定したRouteのpos番目の位置に新たな点を追加する。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      responses:
        '200':
          $ref: '#/components/responses/RouteEditResponse'
        '400':
          description: |
            更新失敗、posの値がRouteの長さより長い場合、`mode`が予期しない値の場合など
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        $ref: '#/components/requestBodies/RouteEditWithNewPointRequest'
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
      - $ref: '#/components/parameters/pos'
  '/routes/{id}/remove/{pos}':
    patch:
      operationId: routesRemove
      summary: 点の削除
      tags:
        - route
      description: |
        指定したRouteのpos番目の点を削除する。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      responses:
        '200':
          $ref: '#/components/responses/RouteEditResponse'
        '400':
          description: |
            更新失敗、posの値がRouteの長さより長い場合、`mode`が予期しない値の場合など
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  $ref: '#/components/schemas/DrawingMode'
              required:
                - mode
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
      - $ref: '#/components/parameters/pos'
  '/routes/{id}/move/{pos}':
    patch:
      operationId: routesMove
      summary: 点の座標の変更
      description: |-
        route_idに対応するRouteのpos番目の点の座標を変更する。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      tags:
        - route
      responses:
        '200':
          $ref: '#/components/responses/RouteEditResponse'
        '400':
          description: |
            更新失敗、posの値がRouteの長さ以上の場合、`mode`が予期しない値の場合など
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        $ref: '#/components/requestBodies/RouteEditWithNewPointRequest'
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
      - $ref: '#/components/parameters/pos'
  '/routes/{id}/clear/':
    patch:
      operationId: routesClear
      summary: 点のクリア
      tags:
        - route
      description: |
        指定したRouteの全ての点を削除する。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      responses:
        '200':
          $ref: '#/components/responses/RouteEditResponse'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
  '/routes/{id}/redo/':
    patch:
      operationId: routesRedo
      summary: 操作を進む
      tags:
        - route
      description: |
        指定したRouteの操作を一つ進める。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      responses:
        '200':
          $ref: '#/components/responses/RouteEditResponse'
        '400':
          description: |
            更新失敗、これ以上redoできない場合など
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
  '/routes/{id}/undo/':
    patch:
      operationId: routesUndo
      summary: 操作を戻る
      tags:
        - route
      description: |
        指定したRouteの操作を一つ戻す。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      responses:
        '200':
          $ref: '#/components/responses/RouteEditResponse'
        '400':
          description: |
            更新失敗、これ以上undoできない場合など
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: |
            対応するRouteが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - userBearerAuth: []
    parameters:
      - $ref: '#/components/parameters/route_id'
  '/routes/{id}/permissions/':
    parameters:
      - $ref: '#/components/parameters/route_id'
    put:
      summary: あるユーザへの権限の付与
      operationId: put-routes-id-permissions
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
      tags:
        - route
      security:
        - userBearerAuth: []
      description: |-
        bodyで指定した`User`に指定した`PermissionType`の権限を付与する。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  $ref: '#/components/schemas/UserId'
                type:
                  $ref: '#/components/schemas/PermissionType'
              required:
                - user_id
                - type
    delete:
      summary: 権限の削除
      operationId: delete-routes-id-permissions
      responses:
        '200':
          description: OK
      description: |-
        bodyで指定した`User`の権限を削除する。
        指定した`User`が権限を持っていなかったとしても、エラーとはならない。
        このエンドポイントを呼ぶには、`EDITOR`以上の権限が必要。
      security:
        - userBearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  $ref: '#/components/schemas/UserId'
              required:
                - user_id
      tags:
        - route
  /users/:
    post:
      summary: Userの作成
      operationId: post-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/UserId'
                required:
                  - id
        '400':
          description: |-
            バリデーションに引っかかった場合
            * 名前の長さ
            * id, email, passwordの形式
            * id, emailがすでに使われている
            など
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - user
      description: |-
        与えられたbodyから`User`を作成し、そのidを返す
        Firebaseに問い合わせてアカウント作成も行う
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/UserId'
                name:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: Userの表示名
                email:
                  type: string
                  format: email
                  description: Userのemail
                gender:
                  $ref: '#/components/schemas/Gender'
                birthdate:
                  $ref: '#/components/schemas/Birthdate'
                icon_url:
                  $ref: '#/components/schemas/IconUrl'
                password:
                  type: string
                  description: アカウントのパスワード
                  minLength: 6
              required:
                - id
                - name
                - email
                - password
            examples: {}
        description: Userの情報
  '/users/{id}':
    parameters:
      - $ref: '#/components/parameters/user_id'
    get:
      summary: Userの情報の取得
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-user-id
      description: 指定したUserの情報を取得する
      parameters: []
    delete:
      summary: Userの削除
      operationId: delete-user-id
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - userBearerAuth: []
      description: |-
        `id`に一致するアカウントを削除する
        Firebaseでのアカウント削除も行う
        認証が必要
      tags:
        - user
    patch:
      summary: User情報の更新
      operationId: patch-user-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 各フィールドのバリデーションに引っかかった場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/AuthenticationErrorResponse'
        '403':
          $ref: '#/components/responses/AuthorizationErrorResponse'
      description: |-
        email, password以外のUser情報を編集するためのエンドポイント
        認証が必要
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Userの表示名
                  minLength: 1
                  maxLength: 50
                gender:
                  $ref: '#/components/schemas/Gender'
                birthdate:
                  $ref: '#/components/schemas/Birthdate'
                icon_url:
                  $ref: '#/components/schemas/IconUrl'
        description: jsonで指定されたkeyについてのみ、更新を行う
      security:
        - userBearerAuth: []
      tags:
        - user
  /users/validate/:
    post:
      summary: User入力の検証
      operationId: post-users-validate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/UserId'
                name:
                  type: string
                  description: Userの表示名
                email:
                  type: string
                  description: Userのemail
                gender:
                  $ref: '#/components/schemas/Gender'
                birthdate:
                  $ref: '#/components/schemas/Birthdate'
                icon_url:
                  $ref: '#/components/schemas/IconUrl'
                password:
                  type: string
                  description: |-
                    アカウントのパスワード
                    `password_confirmation`がある場合は、required
            examples: {}
        description: |-
          検証したいUser情報のフィールド
          一部のフィールドのみを指定することで、部分的な検証が可能
      description: |-
        フォームの各フィールドについて、エラーを列挙する
        全てのフィールドを送信する必要はない
      responses:
        '200':
          description: |-
            OK
            各フィールドで、validationのエラーがあった場合のみ、それぞれのフィールドにエラーコードが入る
            エラーが全くない場合は、空のオブジェクトが返される
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/ValidationErrorCode'
                  name:
                    $ref: '#/components/schemas/ValidationErrorCode'
                  email:
                    $ref: '#/components/schemas/ValidationErrorCode'
                  gender:
                    $ref: '#/components/schemas/ValidationErrorCode'
                  birthdate:
                    $ref: '#/components/schemas/ValidationErrorCode'
                  icon_url:
                    $ref: '#/components/schemas/ValidationErrorCode'
                  password:
                    $ref: '#/components/schemas/ValidationErrorCode'
      tags:
        - user
components:
  schemas:
    Coordinate:
      title: Coordinate
      type: object
      properties:
        latitude:
          type: number
          minimum: -90
          maximum: 90
          format: double
          description: 緯度
        longitude:
          type: number
          minimum: -180
          maximum: 180
          format: double
          description: 経度
      required:
        - latitude
        - longitude
      description: 地球上の点を表す座標
      x-tags:
        - route
    CoordinateVerbose:
      title: CoordinateVerbose
      type: object
      description: ルート上の点を表す座標
      properties:
        latitude:
          type: number
          minimum: -90
          maximum: 90
          format: double
          description: 緯度
        longitude:
          type: number
          minimum: -180
          maximum: 180
          format: double
          description: 経度
        elevation:
          type: integer
          format: int32
          minimum: 0
        distance_from_start:
          type: number
          format: double
          minimum: 0
      required:
        - latitude
        - longitude
        - distance_from_start
      x-tags:
        - route
    BoundingBox:
      title: BoundingBox
      type: object
      description: |-
        Routeを囲むバウンディングボックス
        フロントでの地図表示に用いる
      properties:
        min_coord:
          $ref: '#/components/schemas/Coordinate'
        max_coord:
          $ref: '#/components/schemas/Coordinate'
      required:
        - min_coord
        - max_coord
    Segment:
      type: object
      description: waypointに挟まれた一つの区間に対し、補間を行った上で標高を付与した配列
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/CoordinateVerbose'
      required:
        - points
      x-tags:
        - route
    Polyline:
      type: string
      description: |
        Polyline形式で表現された座標のリスト
        参考：https://developers.google.com/maps/documentation/utilities/polylinealgorithm
      example: _p~iF~ps|U_ulLnnqC_mqNvxq`@
      x-tags:
        - route
    DrawingMode:
      type: string
      title: DrawingMode
      description: |-
        `Segment`を補完するときのモード
        * `follow_road`: 道に沿う
        * `freehand`: フリーハンド
      enum:
        - follow_road
        - freehand
    RouteId:
      type: string
      title: RouteId
      pattern: '^[A-Za-z0-9_-]+'
      minLength: 11
      maxLength: 11
      description: '`Route`のID'
      x-tags:
        - route
      x-examples: {}
      example: 2baY2o3zfGP
    RouteInfo:
      type: object
      description: Route
      x-tags:
        - route
      properties:
        id:
          $ref: '#/components/schemas/RouteId'
        name:
          type: string
          maxLength: 50
          description: ルートの名前
        owner_id:
          $ref: '#/components/schemas/UserId'
        ascent_elevation_gain:
          type: integer
          description: 上り獲得標高
          minimum: 0
          format: int32
        descent_elevation_gain:
          type: integer
          description: 下り獲得標高
          minimum: 0
          format: int32
        total_distance:
          type: number
          description: ルートの総距離
          minimum: 0
          format: double
        created_at:
          type: string
          format: date
          description: 作成日時
        updated_at:
          type: string
          format: date
          description: 最終更新日時
      required:
        - id
        - name
        - owner_id
        - ascent_elevation_gain
        - descent_elevation_gain
        - total_distance
        - created_at
        - updated_at
    Route:
      type: object
      description: |-
        `Polyline`付きの`Route`
        `Route`が空の場合のみ`BoundingBox`を持たない
      x-tags:
        - route
      properties:
        id:
          $ref: '#/components/schemas/RouteId'
        name:
          type: string
          maxLength: 50
          description: ルートの名前
        owner_id:
          $ref: '#/components/schemas/UserId'
        waypoints:
          type: array
          description: ユーザーの入力した点の配列
          items:
            $ref: '#/components/schemas/Coordinate'
        segments:
          type: array
          description: 各waypointsの間のSegmentたち
          items:
            $ref: '#/components/schemas/Segment'
        ascent_elevation_gain:
          type: integer
          description: 上り獲得標高
          minimum: 0
          format: int32
        descent_elevation_gain:
          type: integer
          description: 下り獲得標高
          minimum: 0
          format: int32
        total_distance:
          type: number
          description: ルートの総距離
          minimum: 0
          format: double
        bounding_box:
          $ref: '#/components/schemas/BoundingBox'
      required:
        - id
        - name
        - owner_id
        - waypoints
        - segments
        - ascent_elevation_gain
        - descent_elevation_gain
        - total_distance
    PermissionType:
      type: string
      title: PermissionType
      description: |-
        リソースへの権限の種類
        権限の強さは
        VIEWER < EDITOR (< OWNER)
        OWNERはこの値ではなく、`RouteInfo`の`owner_id`から取得する
      enum:
        - VIEWER
        - EDITOR
      x-tags:
        - route
    User:
      title: User
      type: object
      x-tags:
        - user
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        name:
          type: string
          description: Userの名前
          minLength: 1
          maxLength: 50
        gender:
          $ref: '#/components/schemas/Gender'
        birthdate:
          $ref: '#/components/schemas/Birthdate'
        icon_url:
          $ref: '#/components/schemas/IconUrl'
      required:
        - id
        - name
        - gender
    UserId:
      type: string
      title: UserId
      description: '`User`のID'
      pattern: '^[a-zA-Z0-9]([a-zA-Z0-9]?|[\-]?([a-zA-Z0-9])){0,38}$'
      x-tags:
        - user
    Gender:
      type: string
      title: Gender
      description: 性別
      enum:
        - male
        - female
        - others
      default: others
      x-tags:
        - user
    Birthdate:
      type: string
      title: Birthdate
      format: date
      description: 生年月日（未来の日付は指定不可）
      x-tags:
        - user
    IconUrl:
      type: string
      title: IconUrl
      description: アイコン画像のURL
      format: uri
      x-tags:
        - user
    Error:
      type: object
      description: Error
      required:
        - message
      properties:
        message:
          type: string
          description: エラー内容
      title: ''
    ValidationErrorCode:
      type: string
      title: ValidationErrorCode
      description: |-
        ユーザのフォーム入力に対する、検証結果のエラーコード
        enumとなっている
      enum:
        - INVALID_FORMAT
        - ALREADY_EXISTS
        - RESERVED_WORD
  parameters:
    pos:
      name: pos
      in: path
      required: true
      schema:
        type: integer
      description: 操作する点の位置
    route_id:
      name: id
      in: path
      required: true
      schema:
        type: string
        minLength: 11
        maxLength: 11
        pattern: '^[A-Za-z0-9_-]+'
      description: ルートのID
    user_id:
      name: id
      in: path
      required: true
      schema:
        type: string
        pattern: '^[a-zA-Z0-9]([a-zA-Z0-9]?|[\-]?([a-zA-Z0-9])){0,38}$'
      description: '`User`のID'
  responses:
    RouteEditResponse:
      description: '`Route`編集系のエンドポイントで返すレスポンス'
      content:
        application/json:
          schema:
            type: object
            properties:
              waypoints:
                type: array
                description: ユーザーの入力した点の配列
                items:
                  $ref: '#/components/schemas/Coordinate'
              segments:
                type: array
                description: 各waypointsの間のSegmentたち
                items:
                  $ref: '#/components/schemas/Segment'
              ascent_elevation_gain:
                type: integer
                description: 上り獲得標高
                minimum: 0
                format: int32
              descent_elevation_gain:
                type: integer
                description: 下り獲得標高
                minimum: 0
                format: int32
              total_distance:
                type: number
                description: ルートの総距離
                minimum: 0
                format: double
            required:
              - waypoints
              - segments
              - ascent_elevation_gain
              - descent_elevation_gain
              - total_distance
    AuthenticationErrorResponse:
      description: |-
        認証が必要なのに認証していない場合のエラー

        認証(401)と認可(403)の違い: https://qiita.com/zawawahoge/items/58021f9c0dde1f99b611
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    AuthorizationErrorResponse:
      description: |-
        権限などが足りず、認可に失敗した場合のエラー
        例えば、別のユーザーの非公開Routeにアクセスしようとした場合はこっち

        認証(401)と認可(403)の違い: https://qiita.com/zawawahoge/items/58021f9c0dde1f99b611
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  examples: {}
  requestBodies:
    RouteEditWithNewPointRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              coord:
                $ref: '#/components/schemas/Coordinate'
              mode:
                $ref: '#/components/schemas/DrawingMode'
            required:
              - coord
              - mode
      description: addやmoveのように、新たな座標を提供するリクエスト
  securitySchemes:
    userBearerAuth:
      type: http
      scheme: bearer
      description: Userの認証用
